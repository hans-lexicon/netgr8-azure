<div class="deviceitem-details sticky-position">
    @if(device == null)
    {
        <div class="container p-5 small-font text-muted">Click on a device to see detailed information about the device</div>
    }
    else
    {
        <div class="container p-5">
            <div class="w-100 text-center">
                <div class="mb-5">@device.Id</div>
                <div class="deviceitem-details">
                    <i class="fa-solid fa-microchip"></i>
                </div>
            </div>

            <div class="mt-5">
                <div class="my-2">Details</div>
                <div class="d-flex justify-content-between border-bottom py-3">
                    <div>DeviceId</div>
                    <div>@device.Id</div>
                </div>
                <div class="d-flex justify-content-between border-bottom py-3">
                    <div>Device Type</div>
                    <div>@device.SensorType</div>
                </div>
                <div class="d-flex justify-content-between border-bottom py-3">
                    <div>Status</div>
                    <div class="d-flex align-items-center">
                        @if(@device.Online)
                        {
                            <div class="dot status-dot-active me-2"></div>
                        }
                        else
                        {
                            <div class="dot status-dot-inactive me-2"></div>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-between border-bottom py-3">
                    <div>Location</div>
                    <div>@device.Placement</div>
                </div>
                <div class="border-bottom pb-4">
                    <div class="my-3">Sensor Data</div>
                    <div class="small-font">
                        <div class="d-flex justify-content-between border-bottom pt-3 pb-1">
                        <div>Temperature (°C)</div>
                        <div>@device.Temperature / 50</div>
                    </div>
                    <div class="progress">
                        <div class="progress-bar" style="width:@GetTemperatureInProcent()%;" role="progressbar" aria-valuenow="@device.Temperature" aria-valuemin="0" aria-valuemax="50"></div>
                    </div>
                    <div class="d-flex justify-content-between border-bottom  pt-3 pb-1 mt-2">
                        <div>Humidity (%)</div>
                        <div>@device.Humidity / 80</div>
                    </div>
                    <div class="progress">
                        <div class="progress-bar" style="width:@device.Humidity%;" role="progressbar" aria-valuenow="@device.Humidity" aria-valuemin="20" aria-valuemax="80"></div>
                    </div>
                    </div>
                </div>
                <div class="d-flex justify-content-between gap-3 mt-5">
                    <button class="btn btn-outline-secondary small-font" ><i class="fa-solid fa-pen-to-square me-2"></i>Edit Device</button>
                    <button class="btn btn-outline-secondary small-font text-danger" ><i class="fa-solid fa-trash me-2"></i>Delete Device</button>
                </div>
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public string DeviceId { get; set; } = null!;

    private DeviceModel? device;
    private Timer? timer1;

    protected override async Task OnInitializedAsync()
    {
        timer1 = new Timer(async (object? stateInfo) =>
        {
            if(!string.IsNullOrEmpty(DeviceId))
            {
                device = await Http.GetFromJsonAsync<DeviceModel>($"https://netgr8-functionapp.azurewebsites.net/api/device?code=Ki3y0iBUsshwPkMlB_gviqMJ0msmASjFlYTgfyLubXJPAzFuGIIolA==&deviceId={DeviceId}");        
            }
            StateHasChanged();

        }, new AutoResetEvent(false), 0, 2000);

    }



    private decimal GetTemperatureInProcent()
    {
        return (device.Temperature / 50) * 100;
    }
}
